{"version":3,"file":"static/js/615.1752dac9.chunk.js","mappings":"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","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","webpack://goit-react-hw-05-movies/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/MoviesPage.module.css?251f","pages/Movies/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b30e20b0751027d191af0344cc7d8939';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n    api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"movieListContainer\":\"MovieListItem_movieListContainer__C-nCv\",\"movieItem\":\"MovieListItem_movieItem__mZL09\",\"movieLink\":\"MovieListItem_movieLink__QdmjJ\"};","import PropTypes from 'prop-types';\nimport css from './MovieListItem.module.css';\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom'\n\nexport const MovieListItem = ({ id, title }) => {\n    const location = useLocation();\n\n    return (\n        <div className={css.movieListContainer}>\n        <li className={css.movieItem} key={id}>\n            <Link\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                className={css.movieLink}\n            >\n                <h3>{title}</h3>\n            </Link>\n            </li>\n        </div>\n    );\n};\n\nMovieListItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\nimport { MovieListItem } from 'components/MovieListItem/MovieListItem';\n\nexport const MovieList = ({ movies }) => {\n    return (\n        <ul className={css.movielist}>\n            {movies.map(({ id, title }) => (\n                <MovieListItem key={id} id={id} title={title} />\n            ))}\n        </ul>\n    );\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            id: PropTypes.number.isRequired,\n        })\n    ),\n};","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"MoviesPage_inputWrapper__RY+g5\",\"input\":\"MoviesPage_input__tXUWp\"};","import { useEffect, useState } from \"react\";\nimport { fetchMovieByQuery } from \"api/api\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { Outlet } from \"react-router-dom\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n    // const [searchQuery, setSearchQuery] = useState('Friends');\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get('query') ?? ''; // Default search query is 'Friends'\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const navigate = useNavigate();\n\n    const updateQueryString = query => {\n        const nextParams = query !== '' ? { query } : {};\n        setSearchParams(nextParams);\n    };\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            if (!movieName.trim()) return;\n            setIsLoading(true);\n\n            try {\n                const movies = await fetchMovieByQuery(movieName);\n\n                if (movies.length === 0) {\n                    navigate('/not-found', { replace: true });\n                    return;\n                }\n                console.log('movies', movies);\n                setMovies(movies);\n                setIsLoading(false);\n            } catch (error) {\n                console.error(error);\n                setIsLoading(false);\n            }\n        };\n        fetchMovies();\n    }, [movieName, navigate]);\n\n    return (\n        <div>\n            <div className={css.inputWrapper}>\n                <input\n                    type=\"text\"\n                    className={css.input}\n                    onChange={e => updateQueryString(e.target.value)}\n                    placeholder=\"Search movies...\"\n                />\n                {/* Removed the button since the search updates automatically with the input */}\n                {/* <button onClick={fetchMovies}>Search</button> */}\n            </div>\n            {isLoading ? (\n                <p style={{ textAlign: 'center' }}>Loading...</p>\n            ) : (\n                <MovieList movies={movies} />\n            )}\n            <Outlet />\n        </div>\n    );\n};\n\nexport default MoviesPage;"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","MovieListItem","id","title","location","useLocation","_jsx","className","css","children","Link","to","state","from","MovieList","movies","map","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","_useState3","_useState4","isLoading","setIsLoading","navigate","useNavigate","useEffect","fetchMovies","_movies","trim","length","replace","console","log","t0","error","_jsxs","type","onChange","e","query","target","value","placeholder","style","textAlign","Outlet"],"sourceRoot":""}